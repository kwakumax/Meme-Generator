{"ast":null,"code":"var _jsxFileName = \"F:\\\\react apps\\\\meme generator\\\\src\\\\components\\\\form.js\";\nimport React from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  let randomID = Math.floor(Math.random() * 1000000000);\n  console.log(randomID);\n  function randomPick() {\n    if (randomID === memesData.data.memes.id) {\n      console.log(memesData.data.memes.url);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"one\",\n      placeholder: \"topText\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"two\",\n      placeholder: \"secondText\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: randomPick,\n      children: \"Get a new meme image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","randomID","Math","floor","random","console","log","randomPick","data","memes","id","url","className","children","placeholder","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["F:/react apps/meme generator/src/components/form.js"],"sourcesContent":["import React from \"react\"\r\nimport memesData from \"./memesData\"\r\n\r\nexport default function Meme(){\r\n  let randomID=Math.floor(Math.random()*1000000000);\r\n  console.log(randomID)\r\n  function randomPick(){\r\n    if(randomID === memesData.data.memes.id){\r\n      console.log(memesData.data.memes.url)\r\n    }\r\n  }\r\n  return(\r\n    <div className=\"form\">\r\n      <input\r\n       className=\"one\" placeholder=\"topText\" type=\"text\"/>\r\n      <input \r\n      className=\"two\" placeholder=\"secondText\"type=\"text\"/>\r\n      <button\r\n       className=\"button\"\r\n       onClick={randomPick}\r\n       >\r\n        Get a new meme image\r\n       </button>\r\n    </div>\r\n  )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,IAAIA,CAAA,EAAE;EAC5B,IAAIC,QAAQ,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,UAAU,CAAC;EACjDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACrB,SAASM,UAAUA,CAAA,EAAE;IACnB,IAAGN,QAAQ,KAAKJ,SAAS,CAACW,IAAI,CAACC,KAAK,CAACC,EAAE,EAAC;MACtCL,OAAO,CAACC,GAAG,CAACT,SAAS,CAACW,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC;IACvC;EACF;EACA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA;MACCa,SAAS,EAAC,KAAK;MAACE,WAAW,EAAC,SAAS;MAACC,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpDpB,OAAA;MACAa,SAAS,EAAC,KAAK;MAACE,WAAW,EAAC,YAAY;MAAAC,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrDpB,OAAA;MACCa,SAAS,EAAC,QAAQ;MAClBQ,OAAO,EAAEb,UAAW;MAAAM,QAAA,EACnB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACE,EAAA,GAtBuBrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}