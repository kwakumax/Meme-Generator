{"ast":null,"code":"var _jsxFileName = \"F:\\\\react apps\\\\meme generator\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImage, setAllMemeImages] = React.useState(memesData);\n  function getMemeImage() {\n    const memesArr = memesData.data.memes;\n    let randomID = Math.floor(Math.random() * memesArr.length);\n    console.log(randomID);\n    setMeme({\n      ...meme,\n      randomImage: memesArr[randomID].url\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"one\",\n      placeholder: \"topText\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"two\",\n      placeholder: \"secondText\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: getMemeImage,\n      children: \"Get a new meme image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme,\n      className: \"meme-Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"k+d7kD6jxtUVy+lNBwWLsa66tNc=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImage","setAllMemeImages","getMemeImage","memesArr","data","memes","randomID","Math","floor","random","length","console","log","url","className","children","placeholder","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["F:/react apps/meme generator/src/components/form.js"],"sourcesContent":["import React from \"react\"\r\nimport memesData from \"./memesData\"\r\n\r\nexport default function Meme(){\r\n\r\n  const [meme, setMeme] = React.useState({\r\n    topText:\"\",\r\n    bottomText:\"\",\r\n    randomImage:\"http://i.imgflip.com/1bij.jpg\"\r\n  });\r\n  \r\n  const [allMemeImage, setAllMemeImages] = React.useState(memesData)\r\n\r\n  function getMemeImage(){\r\n    const  memesArr = memesData.data.memes;\r\n    let randomID=Math.floor(Math.random()* memesArr.length);\r\n    console.log(randomID)\r\n    setMeme({\r\n      ...meme,\r\n      randomImage:memesArr[randomID].url\r\n    })\r\n\r\n  \r\n  }\r\n\r\n  \r\n      \r\n    \r\n  \r\n  return(\r\n    <div className=\"form\">\r\n      <input\r\n       className=\"one\" \r\n       placeholder=\"topText\" \r\n       type=\"text\"\r\n       />\r\n      <input \r\n      className=\"two\" \r\n      placeholder=\"secondText\"\r\n      type=\"text\"\r\n      />\r\n      <button\r\n       className=\"button\"\r\n       onClick={getMemeImage}\r\n       >\r\n        Get a new meme image\r\n       </button>\r\n       <img src={meme}\r\n        className=\"meme-Image\"\r\n        />\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC;IACrCC,OAAO,EAAC,EAAE;IACVC,UAAU,EAAC,EAAE;IACbC,WAAW,EAAC;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,gBAAgB,CAAC,GAAGb,KAAK,CAACQ,QAAQ,CAACP,SAAS,CAAC;EAElE,SAASa,YAAYA,CAAA,EAAE;IACrB,MAAOC,QAAQ,GAAGd,SAAS,CAACe,IAAI,CAACC,KAAK;IACtC,IAAIC,QAAQ,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAEN,QAAQ,CAACO,MAAM,CAAC;IACvDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrBX,OAAO,CAAC;MACN,GAAGD,IAAI;MACPK,WAAW,EAACI,QAAQ,CAACG,QAAQ,CAAC,CAACO;IACjC,CAAC,CAAC;EAGJ;EAMA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBxB,OAAA;MACCuB,SAAS,EAAC,KAAK;MACfE,WAAW,EAAC,SAAS;MACrBC,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACH9B,OAAA;MACAuB,SAAS,EAAC,KAAK;MACfE,WAAW,EAAC,YAAY;MACxBC,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACF9B,OAAA;MACCuB,SAAS,EAAC,QAAQ;MAClBQ,OAAO,EAAEpB,YAAa;MAAAa,QAAA,EACrB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9B,OAAA;MAAKgC,GAAG,EAAE7B,IAAK;MACdoB,SAAS,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC5B,EAAA,CAjDuBD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}